"""
Django settings for fornax project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

from fornax import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.DJANGO_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config.DJANGO_DEBUG

ALLOWED_HOSTS = config.DJANGO_ALLOWED_HOSTS

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sip_assembly',
    'rest_framework',
    'asterism',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fornax.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fornax.wsgi.application'

DATABASES = {
    "default": {
        "ENGINE": config.SQL_ENGINE,
        "NAME": config.SQL_DATABASE,
        "USER": config.SQL_USER,
        "PASSWORD": config.SQL_PASSWORD,
        "HOST": config.SQL_HOST,
        "PORT": config.SQL_PORT,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 25,
}

SRC_DIR = os.path.join(config.STORAGE_ROOT, config.STORAGE_SRC_DIR)
TMP_DIR = os.path.join(config.STORAGE_ROOT, config.STORAGE_TMP_DIR)
DEST_DIR = os.path.join(config.STORAGE_ROOT, config.STORAGE_DEST_DIR)

CLEANUP_URL = config.CLEANUP_URL

ARCHIVEMATICA_VERSION = config.AM_VERSION
ARCHIVEMATICA_ORIGINS = {
    "aurora": {
        "baseurl": config.AM_PL_AURORA_BASEURL,
        "username": config.AM_PL_AURORA_USERNAME,
        "api_key": config.AM_PL_AURORA_API_KEY,
        "location_uuid": config.AM_PL_AURORA_LOCATION_UUID,
        "processing_config": config.AM_PL_AURORA_PROCESSING_CONFIG,
        "close_completed": config.AM_PL_AURORA_CLOSE_COMPLETED,
    },
    "digitization": {
        "baseurl": config.AM_PL_DIGITIZATION_BASEURL,
        "username": config.AM_PL_DIGITIZATION_USERNAME,
        "api_key": config.AM_PL_DIGITIZATION_API_KEY,
        "location_uuid": config.AM_PL_DIGITIZATION_LOCATION_UUID,
        "processing_config": config.AM_PL_DIGITIZATION_PROCESSING_CONFIG,
        "close_completed": config.AM_PL_DIGITIZATION_CLOSE_COMPLETED,
    },
    "av_digitization": {
        "baseurl": config.AM_PL_AV_DIGITIZATION_BASEURL,
        "username": config.AM_PL_AV_DIGITIZATION_USERNAME,
        "api_key": config.AM_PL_AV_DIGITIZATION_API_KEY,
        "location_uuid": config.AM_PL_AV_DIGITIZATION_LOCATION_UUID,
        "processing_config": config.AM_PL_AV_DIGITIZATION_PROCESSING_CONFIG,
        "close_completed": config.AM_PL_AV_DIGITIZATION_CLOSE_COMPLETED,
    },
    "legacy_digital": {
        "baseurl": config.AM_PL_LEGACY_DIGITAL_BASEURL,
        "username": config.AM_PL_LEGACY_DIGITAL_USERNAME,
        "api_key": config.AM_PL_LEGACY_DIGITAL_API_KEY,
        "location_uuid": config.AM_PL_LEGACY_DIGITAL_LOCATION_UUID,
        "processing_config": config.AM_PL_LEGACY_DIGITAL_PROCESSING_CONFIG,
        "close_completed": config.AM_PL_LEGACY_DIGITAL_CLOSE_COMPLETED,
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
